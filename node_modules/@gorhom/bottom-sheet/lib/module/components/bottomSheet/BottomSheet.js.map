{"version":3,"sources":["BottomSheet.tsx"],"names":["React","useState","useMemo","useRef","useCallback","forwardRef","useImperativeHandle","memo","useLayoutEffect","useEffect","AccessibilityInfo","isEqual","invariant","Animated","useCode","onChange","call","eq","cond","neq","and","Extrapolate","set","sub","abs","greaterThan","State","usePanGestureHandler","useTapGestureHandler","BottomSheetDraggableView","BottomSheetContentWrapper","BottomSheetContainer","BottomSheetHandleContainer","BottomSheetBackgroundContainer","BottomSheetBackdropContainer","useTransition","useStableCallback","useScrollable","useNormalizedSnapPoints","usePropsValidator","useReactiveValue","BottomSheetInternalProvider","BottomSheetProvider","GESTURE","WINDOW_HEIGHT","NORMAL_DECELERATION_RATE","DEFAULT_ANIMATE_ON_MOUNT","DEFAULT_ANIMATION_EASING","DEFAULT_ANIMATION_DURATION","DEFAULT_HANDLE_HEIGHT","DEFAULT_ENABLE_CONTENT_PANNING_GESTURE","DEFAULT_ENABLE_HANDLE_PANNING_GESTURE","DEFAULT_ACCESSIBLE","DEFAULT_ACCESSIBILITY_LABEL","DEFAULT_ACCESSIBILITY_ROLE","DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT","DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT","styles","interpolate","interpolateV1","interpolateNode","interpolateV2","require","addWhitelistedUIProps","decelerationRate","BottomSheetComponent","props","ref","animationDuration","animationEasing","index","_providedIndex","snapPoints","_providedSnapPoints","handleHeight","_providedHandleHeight","containerHeight","_providedContainerHeight","topInset","bottomInset","enableContentPanningGesture","enableHandlePanningGesture","animateOnMount","style","_providedStyle","animatedPosition","_providedAnimatedPosition","animatedIndex","_providedAnimatedIndex","_providedOnChange","onAnimate","_providedOnAnimate","handleComponent","backdropComponent","backgroundComponent","children","accessible","_providedAccessible","accessibilityLabel","_providedAccessibilityLabel","accessibilityRole","_providedAccessibilityRole","enableAccessibilityChangeAnnouncement","_providedEnableAccessibilityChangeAnnouncement","accessibilityPositionChangeAnnouncement","_providedAccessibilityPositionChangeAnnouncement","rest","containerTapGestureRef","setContainerHeight","setHandleHeight","safeHandleHeight","safeContainerHeight","shouldMeasureContainerHeight","undefined","shouldMeasureHandleHeight","didSetHandleHeight","didSetContainerHeight","isLayoutCalculated","current","animatedIsLayoutReady","currentIndexRef","isClosing","didMountOnAnimate","scrollableContentOffsetY","setScrollableRef","removeScrollableRef","scrollToTop","flashScrollableIndicators","sheetHeight","length","initialPosition","currentPositionRef","state","containerTapGestureState","gestureHandler","containerTapGestureHandler","handlePanGestureState","translation","y","handlePanGestureTranslationY","velocity","handlePanGestureVelocityY","handlePanGestureHandler","contentPanGestureState","contentPanGestureTranslationY","contentPanGestureVelocityY","handleOnAnimate","fromIndex","toIndex","position","manualSnapToPoint","currentPosition","currentGesture","adjustedSnapPoints","slice","reverse","adjustedSnapPointsIndexes","map","_","push","inputRange","outputRange","extrapolate","CLAMP","handleOnContainerMeasureHeight","height","handleOnHandleMeasureHeight","refreshUIElements","currentPositionIndex","Math","max","setNativeProps","maxDeltaY","handleOnChange","handleSettingScrollableRef","scrollableRef","handleSnapTo","force","setValue","handleClose","currentIndexValue","handleExpand","handleCollapse","internalContextVariables","externalContextVariables","snapTo","expand","collapse","close","containerStyle","container","opacity","transform","translateY","contentContainerStyle","contentContainer","contentMaskContainerStyle","contentMaskContainer","paddingBottom","args","indexOf","isScreenReaderEnabled","then","isEnabled","positionInScreen","floor","toFixed","announceForAccessibility","FAILED","CONTENT","BottomSheet"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useMemo,\n  useRef,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  memo,\n  useLayoutEffect,\n  useEffect,\n} from 'react';\nimport { ViewStyle, AccessibilityInfo } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport invariant from 'invariant';\nimport Animated, {\n  useCode,\n  onChange,\n  call,\n  eq,\n  cond,\n  neq,\n  and,\n  Extrapolate,\n  set,\n  sub,\n  abs,\n  greaterThan,\n} from 'react-native-reanimated';\nimport { State, TapGestureHandler } from 'react-native-gesture-handler';\nimport {\n  usePanGestureHandler,\n  useTapGestureHandler,\n} from 'react-native-redash';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\nimport BottomSheetContentWrapper from '../bottomSheetContentWrapper';\nimport BottomSheetContainer from '../bottomSheetContainer';\nimport BottomSheetHandleContainer from '../bottomSheetHandleContainer';\nimport BottomSheetBackgroundContainer from '../bottomSheetBackgroundContainer';\nimport BottomSheetBackdropContainer from '../bottomSheetBackdropContainer';\n// import BottomSheetDebugView from '../bottomSheetDebugView';\nimport { useTransition } from './useTransition';\nimport {\n  useStableCallback,\n  useScrollable,\n  useNormalizedSnapPoints,\n  usePropsValidator,\n  useReactiveValue,\n} from '../../hooks';\nimport {\n  BottomSheetInternalProvider,\n  BottomSheetProvider,\n} from '../../contexts';\nimport { GESTURE, WINDOW_HEIGHT } from '../../constants';\nimport {\n  NORMAL_DECELERATION_RATE,\n  DEFAULT_ANIMATE_ON_MOUNT,\n  DEFAULT_ANIMATION_EASING,\n  DEFAULT_ANIMATION_DURATION,\n  DEFAULT_HANDLE_HEIGHT,\n  DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n  DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n  DEFAULT_ACCESSIBLE,\n  DEFAULT_ACCESSIBILITY_LABEL,\n  DEFAULT_ACCESSIBILITY_ROLE,\n  DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT,\n  DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT,\n} from './constants';\nimport type { ScrollableRef, BottomSheetMethods } from '../../types';\nimport type { BottomSheetProps } from './types';\nimport { styles } from './styles';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\ntype BottomSheet = BottomSheetMethods;\n\nAnimated.addWhitelistedUIProps({\n  decelerationRate: true,\n});\n\nconst BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(\n  (props, ref) => {\n    //#region validate props\n    usePropsValidator(props);\n    //#endregion\n\n    //#region extract props\n    const {\n      // animations configurations\n      animationDuration = DEFAULT_ANIMATION_DURATION,\n      animationEasing = DEFAULT_ANIMATION_EASING,\n\n      // configurations\n      index: _providedIndex = 0,\n      snapPoints: _providedSnapPoints,\n      handleHeight: _providedHandleHeight,\n      containerHeight: _providedContainerHeight,\n      topInset = 0,\n      bottomInset = 0,\n      enableContentPanningGesture = DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n      enableHandlePanningGesture = DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n      animateOnMount = DEFAULT_ANIMATE_ON_MOUNT,\n      style: _providedStyle,\n\n      // animated nodes callback\n      animatedPosition: _providedAnimatedPosition,\n      animatedIndex: _providedAnimatedIndex,\n\n      // callbacks\n      onChange: _providedOnChange,\n      onAnimate: _providedOnAnimate,\n\n      // components\n      handleComponent,\n      backdropComponent,\n      backgroundComponent,\n      children,\n\n      // accessibility\n      accessible: _providedAccessible = DEFAULT_ACCESSIBLE,\n      accessibilityLabel: _providedAccessibilityLabel = DEFAULT_ACCESSIBILITY_LABEL,\n      accessibilityRole: _providedAccessibilityRole = DEFAULT_ACCESSIBILITY_ROLE,\n      enableAccessibilityChangeAnnouncement: _providedEnableAccessibilityChangeAnnouncement = DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT,\n      accessibilityPositionChangeAnnouncement: _providedAccessibilityPositionChangeAnnouncement = DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT,\n      ...rest\n    } = props;\n    //#endregion\n\n    //#region component refs\n    const containerTapGestureRef = useRef<TapGestureHandler>(null);\n    //#endregion\n\n    //#region layout variables\n    // state\n    const [containerHeight, setContainerHeight] = useState(\n      _providedContainerHeight\n    );\n    const [handleHeight, setHandleHeight] = useState(_providedHandleHeight);\n\n    // safe layout values\n\n    const safeHandleHeight = useMemo(\n      () =>\n        handleComponent === null ? 0 : handleHeight || DEFAULT_HANDLE_HEIGHT,\n      [handleHeight, handleComponent]\n    );\n    const safeContainerHeight = useMemo(\n      () => _providedContainerHeight || containerHeight || WINDOW_HEIGHT,\n      [_providedContainerHeight, containerHeight]\n    );\n\n    // conditions\n    const shouldMeasureContainerHeight = useMemo(\n      () => _providedContainerHeight === undefined,\n      [_providedContainerHeight]\n    );\n    const shouldMeasureHandleHeight = useMemo(\n      () =>\n        _providedHandleHeight === undefined &&\n        handleComponent !== undefined &&\n        handleComponent !== null,\n      [_providedHandleHeight, handleComponent]\n    );\n\n    // refs\n    const didSetHandleHeight = useRef(!shouldMeasureHandleHeight);\n    const didSetContainerHeight = useRef(!shouldMeasureContainerHeight);\n\n    const isLayoutCalculated = useMemo(\n      () => {\n        return didSetHandleHeight.current && didSetContainerHeight.current;\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [containerHeight, handleHeight]\n    );\n    const animatedIsLayoutReady = useReactiveValue(isLayoutCalculated ? 1 : 0);\n\n    //#endregion\n\n    //#region variables\n\n    // refs\n    const currentIndexRef = useRef<number>(_providedIndex);\n    const isClosing = useRef(false);\n    const didMountOnAnimate = useRef(false);\n\n    const {\n      scrollableContentOffsetY,\n      setScrollableRef,\n      removeScrollableRef,\n      scrollToTop,\n      flashScrollableIndicators,\n    } = useScrollable();\n\n    const snapPoints = useNormalizedSnapPoints(\n      _providedSnapPoints,\n      safeContainerHeight,\n      safeHandleHeight\n    );\n\n    const sheetHeight = useMemo(\n      () =>\n        safeContainerHeight -\n        snapPoints[snapPoints.length - 1] -\n        safeHandleHeight,\n      [snapPoints, safeContainerHeight, safeHandleHeight]\n    );\n\n    const initialPosition = useMemo(() => {\n      return currentIndexRef.current < 0 || animateOnMount\n        ? safeContainerHeight\n        : snapPoints[currentIndexRef.current];\n    }, [snapPoints, animateOnMount, safeContainerHeight]);\n    const currentPositionRef = useRef<number>(initialPosition);\n    //#endregion\n\n    //#region gestures\n    const {\n      state: containerTapGestureState,\n      gestureHandler: containerTapGestureHandler,\n    } = useTapGestureHandler();\n    const {\n      state: handlePanGestureState,\n      translation: { y: handlePanGestureTranslationY },\n      velocity: { y: handlePanGestureVelocityY },\n      gestureHandler: handlePanGestureHandler,\n    } = usePanGestureHandler();\n    const {\n      state: contentPanGestureState,\n      translation: { y: contentPanGestureTranslationY },\n      velocity: { y: contentPanGestureVelocityY },\n    } = usePanGestureHandler();\n    //#endregion\n\n    //#region animated variables\n    const handleOnAnimate = useStableCallback(\n      (fromIndex: number, toIndex: number) => {\n        if (_providedOnAnimate) {\n          _providedOnAnimate(fromIndex, toIndex);\n        }\n      }\n    );\n    const {\n      position,\n      manualSnapToPoint,\n      currentPosition,\n      currentGesture,\n    } = useTransition({\n      animationDuration,\n      animationEasing,\n      contentPanGestureState,\n      contentPanGestureTranslationY,\n      contentPanGestureVelocityY,\n      handlePanGestureState,\n      handlePanGestureTranslationY,\n      handlePanGestureVelocityY,\n      scrollableContentOffsetY,\n      animatedIsLayoutReady,\n      snapPoints,\n      initialPosition,\n      currentIndexRef,\n      onAnimate: handleOnAnimate,\n    });\n\n    // animated values\n    const animatedIndex = useMemo(() => {\n      const adjustedSnapPoints = snapPoints.slice().reverse();\n      const adjustedSnapPointsIndexes = snapPoints\n        .slice()\n        .map((_, index) => index)\n        .reverse();\n\n      /**\n       * this been added to resolve issues when provide\n       * one snap point.\n       */\n      if (snapPoints.length === 1) {\n        adjustedSnapPoints.push(safeContainerHeight);\n        adjustedSnapPointsIndexes.push(-1);\n      }\n\n      return cond(\n        animatedIsLayoutReady,\n        interpolate(position, {\n          inputRange: adjustedSnapPoints,\n          outputRange: adjustedSnapPointsIndexes,\n          extrapolate: Extrapolate.CLAMP,\n        }),\n        0\n      );\n    }, [position, animatedIsLayoutReady, safeContainerHeight, snapPoints]);\n\n    const animatedPosition = useMemo(\n      () =>\n        cond(\n          animatedIsLayoutReady,\n          abs(sub(safeContainerHeight, position)),\n          safeContainerHeight\n        ),\n      [safeContainerHeight, position, animatedIsLayoutReady]\n    );\n\n    /**\n     * Scrollable animated props.\n     */\n    const decelerationRate = useMemo(\n      () =>\n        cond(\n          greaterThan(position, snapPoints[snapPoints.length - 1]),\n          0.001,\n          NORMAL_DECELERATION_RATE\n        ),\n      [position, snapPoints]\n    );\n    //#endregion\n\n    //#region layout callbacks\n    const handleOnContainerMeasureHeight = useCallback((height: number) => {\n      // console.log('BottomSheet', 'handleOnContainerMeasureHeight', height);\n      didSetContainerHeight.current = true;\n      setContainerHeight(height);\n    }, []);\n\n    const handleOnHandleMeasureHeight = useCallback((height: number) => {\n      // console.log('BottomSheet', 'handleOnHandleMeasureHeight', height);\n      didSetHandleHeight.current = true;\n      setHandleHeight(height);\n    }, []);\n    //#endregion\n\n    //#region private methods\n    const refreshUIElements = useCallback(() => {\n      const currentPositionIndex = Math.max(currentIndexRef.current, 0);\n      if (containerTapGestureRef.current) {\n        // @ts-ignore\n        containerTapGestureRef.current.setNativeProps({\n          maxDeltaY: Math.abs(\n            snapPoints[snapPoints.length - 1] - snapPoints[currentPositionIndex]\n          ),\n        });\n      }\n\n      if (currentPositionIndex === snapPoints.length - 1) {\n        flashScrollableIndicators();\n      }\n    }, [snapPoints, containerTapGestureRef, flashScrollableIndicators]);\n    const handleOnChange = useStableCallback((index: number) => {\n      if (_providedOnChange) {\n        _providedOnChange(index);\n      }\n    });\n    const handleSettingScrollableRef = useCallback(\n      (scrollableRef: ScrollableRef) => {\n        setScrollableRef(scrollableRef);\n        refreshUIElements();\n      },\n      [setScrollableRef, refreshUIElements]\n    );\n    //#endregion\n\n    //#region public methods\n    const handleSnapTo = useCallback(\n      (index: number, force: boolean = false) => {\n        invariant(\n          index >= 0 && index <= snapPoints.length - 1,\n          `'index' was provided but out of the provided snap points range! expected value to be between -1, ${\n            snapPoints.length - 1\n          }`\n        );\n        if (isClosing.current && !force) {\n          return;\n        }\n        manualSnapToPoint.setValue(snapPoints[index]);\n      },\n      [snapPoints, manualSnapToPoint]\n    );\n    const handleClose = useCallback(() => {\n      const currentIndexValue = currentIndexRef.current;\n      if (\n        currentIndexValue === -1 ||\n        isClosing.current ||\n        currentPositionRef.current === safeContainerHeight\n      ) {\n        return;\n      }\n      isClosing.current = true;\n      manualSnapToPoint.setValue(safeContainerHeight);\n    }, [manualSnapToPoint, safeContainerHeight]);\n    const handleExpand = useCallback(() => {\n      if (isClosing.current) {\n        return;\n      }\n      manualSnapToPoint.setValue(snapPoints[snapPoints.length - 1]);\n    }, [snapPoints, manualSnapToPoint]);\n    const handleCollapse = useCallback(() => {\n      if (isClosing.current) {\n        return;\n      }\n      manualSnapToPoint.setValue(snapPoints[0]);\n    }, [snapPoints, manualSnapToPoint]);\n    //#endregion\n\n    //#region context variables\n    const internalContextVariables = useMemo(\n      () => ({\n        enableContentPanningGesture,\n        containerTapGestureRef,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        scrollableContentOffsetY,\n        decelerationRate,\n        setScrollableRef: handleSettingScrollableRef,\n        removeScrollableRef,\n      }),\n      [\n        enableContentPanningGesture,\n        containerTapGestureRef,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        decelerationRate,\n        scrollableContentOffsetY,\n        handleSettingScrollableRef,\n        removeScrollableRef,\n      ]\n    );\n    const externalContextVariables = useMemo(\n      () => ({\n        snapTo: handleSnapTo,\n        expand: handleExpand,\n        collapse: handleCollapse,\n        close: handleClose,\n      }),\n      [handleSnapTo, handleExpand, handleCollapse, handleClose]\n    );\n    //#endregion\n\n    //#region expose public methods\n    useImperativeHandle(ref, () => ({\n      snapTo: handleSnapTo,\n      expand: handleExpand,\n      collapse: handleCollapse,\n      close: handleClose,\n    }));\n    //#endregion\n\n    //#region styles\n    const containerStyle = useMemo(\n      () => [\n        _providedStyle,\n        styles.container,\n        {\n          opacity: animatedIsLayoutReady,\n          transform: [\n            {\n              translateY: cond(\n                animatedIsLayoutReady,\n                position,\n                safeContainerHeight\n              ),\n            },\n          ],\n        },\n      ],\n      [safeContainerHeight, _providedStyle, position, animatedIsLayoutReady]\n    );\n    const contentContainerStyle = useMemo(\n      () => ({\n        ...styles.contentContainer,\n        height: sheetHeight,\n      }),\n      [sheetHeight]\n    );\n\n    /**\n     * added safe area to prevent the sheet from floating above\n     * the bottom of the screen, when sheet being over dragged or\n     * when the sheet is resized.\n     */\n    const contentMaskContainerStyle = useMemo<ViewStyle>(\n      () => ({\n        ...styles.contentMaskContainer,\n        paddingBottom: animatedIsLayoutReady ? sheetHeight : 0,\n      }),\n      [sheetHeight, animatedIsLayoutReady]\n    );\n    //#endregion\n\n    //#region effects\n\n    /**\n     * This will animate the sheet to the initial snap point\n     * when component is mounted.\n     */\n    useLayoutEffect(() => {\n      if (\n        animateOnMount &&\n        isLayoutCalculated &&\n        didMountOnAnimate.current === false &&\n        isClosing.current === false &&\n        _providedIndex !== -1\n      ) {\n        manualSnapToPoint.setValue(snapPoints[_providedIndex]);\n        didMountOnAnimate.current = true;\n      }\n    }, [\n      _providedIndex,\n      animateOnMount,\n      isLayoutCalculated,\n      manualSnapToPoint,\n      snapPoints,\n    ]);\n\n    /*\n     * keep animated position synced with snap points.\n     */\n    useEffect(() => {\n      if (\n        isLayoutCalculated &&\n        currentIndexRef.current !== -1 &&\n        isClosing.current === false\n      ) {\n        manualSnapToPoint.setValue(snapPoints[currentIndexRef.current]);\n      }\n    }, [isLayoutCalculated, snapPoints, manualSnapToPoint]);\n\n    /**\n     * @DEV\n     * here we track the current position and\n     * - call on change ( if provided ).\n     * - flash scrollable component scroll indicators.\n     * - manipulate the root tap gesture handler maxDeltaY,\n     *   which allows the scrollable component to be activated.\n     */\n    useCode(\n      () =>\n        onChange(currentPosition, [\n          call([currentPosition], args => {\n            const currentPositionIndex = snapPoints.indexOf(args[0]);\n\n            /**\n             * reset is closing\n             */\n            isClosing.current = false;\n\n            /**\n             * if animation was interrupted, we ignore the change.\n             */\n            if (\n              currentPositionIndex === -1 &&\n              args[0] !== safeContainerHeight - topInset\n            ) {\n              return;\n            }\n\n            /**\n             * Here we announce the bottom sheet position\n             * for accessibility service.\n             */\n            AccessibilityInfo.isScreenReaderEnabled().then(isEnabled => {\n              if (\n                !isEnabled ||\n                !_providedEnableAccessibilityChangeAnnouncement\n              ) {\n                return;\n              }\n              const positionInScreen = Math.max(\n                Math.floor(\n                  ((WINDOW_HEIGHT - snapPoints[currentPositionIndex] || 1) /\n                    WINDOW_HEIGHT) *\n                    100\n                ),\n                0\n              ).toFixed(0);\n              AccessibilityInfo.announceForAccessibility(\n                typeof _providedAccessibilityPositionChangeAnnouncement ===\n                  'function'\n                  ? _providedAccessibilityPositionChangeAnnouncement(\n                      positionInScreen\n                    )\n                  : _providedAccessibilityPositionChangeAnnouncement\n              );\n            });\n\n            currentIndexRef.current = currentPositionIndex;\n            currentPositionRef.current = args[0];\n            refreshUIElements();\n            handleOnChange(currentPositionIndex);\n          }),\n        ]),\n      [snapPoints, safeContainerHeight, topInset, refreshUIElements]\n    );\n\n    /**\n     * @DEV\n     * Once the root tap gesture handler states change to failed\n     * and the sheet not fully extended, we make sure to prevent the\n     * scrollable component from scrolling.\n     */\n    useCode(\n      () =>\n        cond(\n          and(\n            eq(containerTapGestureState, State.FAILED),\n            eq(currentGesture, GESTURE.CONTENT),\n            neq(position, snapPoints[snapPoints.length - 1])\n          ),\n          call([], () => {\n            scrollToTop();\n          })\n        ),\n      [snapPoints]\n    );\n    //#endregion\n\n    //#region render\n    // console.log('BottomSheet', 'render', {\n    //   snapPoints,\n    //   shouldMeasureContainerHeight,\n    //   safeContainerHeight,\n    //   topInset,\n    //   bottomInset,\n    // });\n    return (\n      <BottomSheetProvider value={externalContextVariables}>\n        <BottomSheetBackdropContainer\n          key=\"BottomSheetBackdropContainer\"\n          animatedIndex={animatedIndex}\n          animatedPosition={animatedPosition}\n          backdropComponent={backdropComponent}\n        />\n        <BottomSheetContainer\n          key=\"BottomSheetContainer\"\n          shouldMeasureHeight={shouldMeasureContainerHeight}\n          onMeasureHeight={handleOnContainerMeasureHeight}\n          topInset={topInset}\n          bottomInset={bottomInset}\n        >\n          <BottomSheetContentWrapper\n            key=\"BottomSheetContentWrapper\"\n            ref={containerTapGestureRef}\n            {...containerTapGestureHandler}\n          >\n            <Animated.View\n              accessible={_providedAccessible ?? undefined}\n              accessibilityRole={_providedAccessibilityRole ?? undefined}\n              accessibilityLabel={_providedAccessibilityLabel ?? undefined}\n              style={containerStyle}\n              {...rest}\n            >\n              <BottomSheetInternalProvider value={internalContextVariables}>\n                <BottomSheetBackgroundContainer\n                  key=\"BottomSheetBackgroundContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  backgroundComponent={backgroundComponent}\n                />\n                <BottomSheetHandleContainer\n                  key=\"BottomSheetHandleContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  simultaneousHandlers={containerTapGestureRef}\n                  shouldMeasureHeight={shouldMeasureHandleHeight}\n                  enableHandlePanningGesture={enableHandlePanningGesture}\n                  handleComponent={handleComponent}\n                  onMeasureHeight={handleOnHandleMeasureHeight}\n                  {...handlePanGestureHandler}\n                />\n                <Animated.View\n                  pointerEvents=\"box-none\"\n                  style={contentMaskContainerStyle}\n                >\n                  <BottomSheetDraggableView\n                    key=\"BottomSheetRootDraggableView\"\n                    style={contentContainerStyle}\n                  >\n                    {children}\n                  </BottomSheetDraggableView>\n                </Animated.View>\n              </BottomSheetInternalProvider>\n            </Animated.View>\n          </BottomSheetContentWrapper>\n\n          {_providedAnimatedPosition && (\n            <Animated.Code\n              exec={set(_providedAnimatedPosition, animatedPosition)}\n            />\n          )}\n\n          {_providedAnimatedIndex && (\n            <Animated.Code exec={set(_providedAnimatedIndex, animatedIndex)} />\n          )}\n\n          {/* <BottomSheetDebugView\n            values={{\n              position,\n            }}\n          /> */}\n        </BottomSheetContainer>\n      </BottomSheetProvider>\n    );\n    //#endregion\n  }\n);\n\nconst BottomSheet = memo(BottomSheetComponent, isEqual);\n\nexport default BottomSheet;\n"]}