{"version":3,"sources":["BottomSheetBackdrop.tsx"],"names":["React","memo","useCallback","useMemo","useRef","TouchableWithoutFeedback","Animated","and","block","call","cond","eq","Extrapolate","neq","not","set","useCode","isEqual","useReactiveValue","DEFAULT_OPACITY","DEFAULT_APPEARS_ON_INDEX","DEFAULT_DISAPPEARS_ON_INDEX","DEFAULT_ENABLE_TOUCH_THROUGH","DEFAULT_ACCESSIBLE","DEFAULT_ACCESSIBILITY_ROLE","DEFAULT_ACCESSIBILITY_LABEL","DEFAULT_ACCESSIBILITY_HINT","WINDOW_HEIGHT","usePressBehavior","styles","interpolate","interpolateV1","interpolateNode","interpolateV2","require","AnimatedTouchableWithoutFeedback","createAnimatedComponent","BottomSheetBackdropComponent","animatedIndex","animatedPosition","opacity","appearsOnIndex","disappearsOnIndex","enableTouchThrough","pressBehavior","closeOnPress","style","accessible","_providedAccessible","accessibilityRole","_providedAccessibilityRole","accessibilityLabel","_providedAccessibilityLabel","accessibilityHint","_providedAccessibilityHint","rest","handleOnPress","syntheticPressBehavior","containerRef","pointerEvents","isTouchable","animatedOpacity","inputRange","outputRange","extrapolate","CLAMP","buttonStyle","transform","translateY","containerStyle","container","setPointerEvents","value","current","setNativeProps","undefined","BottomSheetBackdrop"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo, useRef } from 'react';\nimport { View, TouchableWithoutFeedback } from 'react-native';\nimport Animated, {\n  and,\n  block,\n  call,\n  cond,\n  eq,\n  Extrapolate,\n  neq,\n  not,\n  set,\n  useCode,\n} from 'react-native-reanimated';\nimport isEqual from 'lodash.isequal';\nimport { useReactiveValue } from '../../hooks';\nimport {\n  DEFAULT_OPACITY,\n  DEFAULT_APPEARS_ON_INDEX,\n  DEFAULT_DISAPPEARS_ON_INDEX,\n  DEFAULT_ENABLE_TOUCH_THROUGH,\n  DEFAULT_ACCESSIBLE,\n  DEFAULT_ACCESSIBILITY_ROLE,\n  DEFAULT_ACCESSIBILITY_LABEL,\n  DEFAULT_ACCESSIBILITY_HINT,\n} from './constants';\nimport { WINDOW_HEIGHT } from '../../constants';\nimport { usePressBehavior } from './usePressBehavior';\nimport { styles } from './styles';\nimport type { BottomSheetDefaultBackdropProps } from './types';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\nconst AnimatedTouchableWithoutFeedback = Animated.createAnimatedComponent(\n  TouchableWithoutFeedback\n);\n\nconst BottomSheetBackdropComponent = ({\n  animatedIndex,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  animatedPosition,\n  opacity = DEFAULT_OPACITY,\n  appearsOnIndex = DEFAULT_APPEARS_ON_INDEX,\n  disappearsOnIndex = DEFAULT_DISAPPEARS_ON_INDEX,\n  enableTouchThrough = DEFAULT_ENABLE_TOUCH_THROUGH,\n  pressBehavior,\n  closeOnPress,\n  style,\n  accessible: _providedAccessible = DEFAULT_ACCESSIBLE,\n  accessibilityRole: _providedAccessibilityRole = DEFAULT_ACCESSIBILITY_ROLE,\n  accessibilityLabel: _providedAccessibilityLabel = DEFAULT_ACCESSIBILITY_LABEL,\n  accessibilityHint: _providedAccessibilityHint = DEFAULT_ACCESSIBILITY_HINT,\n  ...rest\n}: BottomSheetDefaultBackdropProps) => {\n  //#region hooks\n  const { handleOnPress, syntheticPressBehavior } = usePressBehavior({\n    pressBehavior,\n    closeOnPress,\n    disappearsOnIndex,\n  });\n  //#endregion\n\n  //#region variables\n  const containerRef = useRef<Animated.View>(null);\n  const pointerEvents = useMemo(() => (enableTouchThrough ? 'none' : 'auto'), [\n    enableTouchThrough,\n  ]);\n  //#endregion\n\n  //#region animation variables\n  const isTouchable = useReactiveValue(\n    syntheticPressBehavior !== 'none' ? 1 : 0\n  );\n  const animatedOpacity = useMemo(\n    () =>\n      interpolate(animatedIndex, {\n        inputRange: [disappearsOnIndex, appearsOnIndex],\n        outputRange: [0, opacity],\n        extrapolate: Extrapolate.CLAMP,\n      }),\n    [animatedIndex, opacity, appearsOnIndex, disappearsOnIndex]\n  );\n  //#endregion\n\n  //#region styles\n  const buttonStyle = useMemo(\n    () => [\n      style,\n      {\n        transform: [\n          {\n            translateY: cond(\n              eq(animatedIndex, disappearsOnIndex),\n              WINDOW_HEIGHT,\n              0\n            ),\n          },\n        ],\n      },\n    ],\n    [disappearsOnIndex, style, animatedIndex]\n  );\n  const containerStyle = useMemo(\n    () => [\n      styles.container,\n      style,\n      {\n        opacity: animatedOpacity,\n      },\n    ],\n    [style, animatedOpacity]\n  );\n  //#endregion\n\n  const setPointerEvents = useCallback((value: string) => {\n    if (containerRef.current) {\n      ((containerRef.current as any) as View).setNativeProps({\n        pointerEvents: value,\n      });\n    }\n  }, []);\n\n  //#region effects\n  useCode(\n    () =>\n      block([\n        cond(\n          and(eq(animatedIndex, disappearsOnIndex), isTouchable),\n          [set(isTouchable, 0), call([], () => setPointerEvents('none'))],\n          cond(and(neq(animatedIndex, disappearsOnIndex), not(isTouchable)), [\n            set(isTouchable, 1),\n            call([], () => setPointerEvents('auto')),\n          ])\n        ),\n      ]),\n    [animatedIndex, disappearsOnIndex, isTouchable, setPointerEvents]\n  );\n  //#endregion\n\n  return syntheticPressBehavior !== 'none' ? (\n    <AnimatedTouchableWithoutFeedback\n      accessible={_providedAccessible ?? undefined}\n      accessibilityRole={_providedAccessibilityRole ?? undefined}\n      accessibilityLabel={_providedAccessibilityLabel ?? undefined}\n      accessibilityHint={_providedAccessibilityHint ?? undefined}\n      style={buttonStyle}\n      onPress={handleOnPress}\n      {...rest}\n    >\n      <Animated.View ref={containerRef} key=\"backdrop\" style={containerStyle} />\n    </AnimatedTouchableWithoutFeedback>\n  ) : (\n    <Animated.View\n      ref={containerRef}\n      key=\"backdrop\"\n      accessible={_providedAccessible ?? undefined}\n      accessibilityRole={_providedAccessibilityRole ?? undefined}\n      accessibilityLabel={_providedAccessibilityLabel ?? undefined}\n      accessibilityHint={_providedAccessibilityHint ?? undefined}\n      pointerEvents={pointerEvents}\n      style={containerStyle}\n      {...rest}\n    />\n  );\n};\n\nconst BottomSheetBackdrop = memo(BottomSheetBackdropComponent, isEqual);\n\nexport default BottomSheetBackdrop;\n"]}