{"version":3,"sources":["BottomSheet.tsx"],"names":["interpolate","interpolateV1","interpolateNode","interpolateV2","require","Animated","addWhitelistedUIProps","decelerationRate","BottomSheetComponent","props","ref","animationDuration","DEFAULT_ANIMATION_DURATION","animationEasing","DEFAULT_ANIMATION_EASING","index","_providedIndex","snapPoints","_providedSnapPoints","handleHeight","_providedHandleHeight","containerHeight","_providedContainerHeight","topInset","bottomInset","enableContentPanningGesture","DEFAULT_ENABLE_CONTENT_PANNING_GESTURE","enableHandlePanningGesture","DEFAULT_ENABLE_HANDLE_PANNING_GESTURE","animateOnMount","DEFAULT_ANIMATE_ON_MOUNT","style","_providedStyle","animatedPosition","_providedAnimatedPosition","animatedIndex","_providedAnimatedIndex","onChange","_providedOnChange","onAnimate","_providedOnAnimate","handleComponent","backdropComponent","backgroundComponent","children","accessible","_providedAccessible","DEFAULT_ACCESSIBLE","accessibilityLabel","_providedAccessibilityLabel","DEFAULT_ACCESSIBILITY_LABEL","accessibilityRole","_providedAccessibilityRole","DEFAULT_ACCESSIBILITY_ROLE","enableAccessibilityChangeAnnouncement","_providedEnableAccessibilityChangeAnnouncement","DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT","accessibilityPositionChangeAnnouncement","_providedAccessibilityPositionChangeAnnouncement","DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT","rest","containerTapGestureRef","setContainerHeight","setHandleHeight","safeHandleHeight","DEFAULT_HANDLE_HEIGHT","safeContainerHeight","WINDOW_HEIGHT","shouldMeasureContainerHeight","undefined","shouldMeasureHandleHeight","didSetHandleHeight","didSetContainerHeight","isLayoutCalculated","current","animatedIsLayoutReady","currentIndexRef","isClosing","didMountOnAnimate","scrollableContentOffsetY","setScrollableRef","removeScrollableRef","scrollToTop","flashScrollableIndicators","sheetHeight","length","initialPosition","currentPositionRef","state","containerTapGestureState","gestureHandler","containerTapGestureHandler","handlePanGestureState","translation","y","handlePanGestureTranslationY","velocity","handlePanGestureVelocityY","handlePanGestureHandler","contentPanGestureState","contentPanGestureTranslationY","contentPanGestureVelocityY","handleOnAnimate","fromIndex","toIndex","position","manualSnapToPoint","currentPosition","currentGesture","adjustedSnapPoints","slice","reverse","adjustedSnapPointsIndexes","map","_","push","inputRange","outputRange","extrapolate","Extrapolate","CLAMP","NORMAL_DECELERATION_RATE","handleOnContainerMeasureHeight","height","handleOnHandleMeasureHeight","refreshUIElements","currentPositionIndex","Math","max","setNativeProps","maxDeltaY","abs","handleOnChange","handleSettingScrollableRef","scrollableRef","handleSnapTo","force","setValue","handleClose","currentIndexValue","handleExpand","handleCollapse","internalContextVariables","externalContextVariables","snapTo","expand","collapse","close","containerStyle","styles","container","opacity","transform","translateY","contentContainerStyle","contentContainer","contentMaskContainerStyle","contentMaskContainer","paddingBottom","args","indexOf","AccessibilityInfo","isScreenReaderEnabled","then","isEnabled","positionInScreen","floor","toFixed","announceForAccessibility","State","FAILED","GESTURE","CONTENT","BottomSheet","isEqual"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useMemo,\n  useRef,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  memo,\n  useLayoutEffect,\n  useEffect,\n} from 'react';\nimport { ViewStyle, AccessibilityInfo } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport invariant from 'invariant';\nimport Animated, {\n  useCode,\n  onChange,\n  call,\n  eq,\n  cond,\n  neq,\n  and,\n  Extrapolate,\n  set,\n  sub,\n  abs,\n  greaterThan,\n} from 'react-native-reanimated';\nimport { State, TapGestureHandler } from 'react-native-gesture-handler';\nimport {\n  usePanGestureHandler,\n  useTapGestureHandler,\n} from 'react-native-redash';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\nimport BottomSheetContentWrapper from '../bottomSheetContentWrapper';\nimport BottomSheetContainer from '../bottomSheetContainer';\nimport BottomSheetHandleContainer from '../bottomSheetHandleContainer';\nimport BottomSheetBackgroundContainer from '../bottomSheetBackgroundContainer';\nimport BottomSheetBackdropContainer from '../bottomSheetBackdropContainer';\n// import BottomSheetDebugView from '../bottomSheetDebugView';\nimport { useTransition } from './useTransition';\nimport {\n  useStableCallback,\n  useScrollable,\n  useNormalizedSnapPoints,\n  usePropsValidator,\n  useReactiveValue,\n} from '../../hooks';\nimport {\n  BottomSheetInternalProvider,\n  BottomSheetProvider,\n} from '../../contexts';\nimport { GESTURE, WINDOW_HEIGHT } from '../../constants';\nimport {\n  NORMAL_DECELERATION_RATE,\n  DEFAULT_ANIMATE_ON_MOUNT,\n  DEFAULT_ANIMATION_EASING,\n  DEFAULT_ANIMATION_DURATION,\n  DEFAULT_HANDLE_HEIGHT,\n  DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n  DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n  DEFAULT_ACCESSIBLE,\n  DEFAULT_ACCESSIBILITY_LABEL,\n  DEFAULT_ACCESSIBILITY_ROLE,\n  DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT,\n  DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT,\n} from './constants';\nimport type { ScrollableRef, BottomSheetMethods } from '../../types';\nimport type { BottomSheetProps } from './types';\nimport { styles } from './styles';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\ntype BottomSheet = BottomSheetMethods;\n\nAnimated.addWhitelistedUIProps({\n  decelerationRate: true,\n});\n\nconst BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(\n  (props, ref) => {\n    //#region validate props\n    usePropsValidator(props);\n    //#endregion\n\n    //#region extract props\n    const {\n      // animations configurations\n      animationDuration = DEFAULT_ANIMATION_DURATION,\n      animationEasing = DEFAULT_ANIMATION_EASING,\n\n      // configurations\n      index: _providedIndex = 0,\n      snapPoints: _providedSnapPoints,\n      handleHeight: _providedHandleHeight,\n      containerHeight: _providedContainerHeight,\n      topInset = 0,\n      bottomInset = 0,\n      enableContentPanningGesture = DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n      enableHandlePanningGesture = DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n      animateOnMount = DEFAULT_ANIMATE_ON_MOUNT,\n      style: _providedStyle,\n\n      // animated nodes callback\n      animatedPosition: _providedAnimatedPosition,\n      animatedIndex: _providedAnimatedIndex,\n\n      // callbacks\n      onChange: _providedOnChange,\n      onAnimate: _providedOnAnimate,\n\n      // components\n      handleComponent,\n      backdropComponent,\n      backgroundComponent,\n      children,\n\n      // accessibility\n      accessible: _providedAccessible = DEFAULT_ACCESSIBLE,\n      accessibilityLabel: _providedAccessibilityLabel = DEFAULT_ACCESSIBILITY_LABEL,\n      accessibilityRole: _providedAccessibilityRole = DEFAULT_ACCESSIBILITY_ROLE,\n      enableAccessibilityChangeAnnouncement: _providedEnableAccessibilityChangeAnnouncement = DEFAULT_ENABLE_ACCESSIBILITY_CHANGE_ANNOUNCEMENT,\n      accessibilityPositionChangeAnnouncement: _providedAccessibilityPositionChangeAnnouncement = DEFAULT_ACCESSIBILITY_POSITION_CHANGE_ANNOUNCEMENT,\n      ...rest\n    } = props;\n    //#endregion\n\n    //#region component refs\n    const containerTapGestureRef = useRef<TapGestureHandler>(null);\n    //#endregion\n\n    //#region layout variables\n    // state\n    const [containerHeight, setContainerHeight] = useState(\n      _providedContainerHeight\n    );\n    const [handleHeight, setHandleHeight] = useState(_providedHandleHeight);\n\n    // safe layout values\n\n    const safeHandleHeight = useMemo(\n      () =>\n        handleComponent === null ? 0 : handleHeight || DEFAULT_HANDLE_HEIGHT,\n      [handleHeight, handleComponent]\n    );\n    const safeContainerHeight = useMemo(\n      () => _providedContainerHeight || containerHeight || WINDOW_HEIGHT,\n      [_providedContainerHeight, containerHeight]\n    );\n\n    // conditions\n    const shouldMeasureContainerHeight = useMemo(\n      () => _providedContainerHeight === undefined,\n      [_providedContainerHeight]\n    );\n    const shouldMeasureHandleHeight = useMemo(\n      () =>\n        _providedHandleHeight === undefined &&\n        handleComponent !== undefined &&\n        handleComponent !== null,\n      [_providedHandleHeight, handleComponent]\n    );\n\n    // refs\n    const didSetHandleHeight = useRef(!shouldMeasureHandleHeight);\n    const didSetContainerHeight = useRef(!shouldMeasureContainerHeight);\n\n    const isLayoutCalculated = useMemo(\n      () => {\n        return didSetHandleHeight.current && didSetContainerHeight.current;\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [containerHeight, handleHeight]\n    );\n    const animatedIsLayoutReady = useReactiveValue(isLayoutCalculated ? 1 : 0);\n\n    //#endregion\n\n    //#region variables\n\n    // refs\n    const currentIndexRef = useRef<number>(_providedIndex);\n    const isClosing = useRef(false);\n    const didMountOnAnimate = useRef(false);\n\n    const {\n      scrollableContentOffsetY,\n      setScrollableRef,\n      removeScrollableRef,\n      scrollToTop,\n      flashScrollableIndicators,\n    } = useScrollable();\n\n    const snapPoints = useNormalizedSnapPoints(\n      _providedSnapPoints,\n      safeContainerHeight,\n      safeHandleHeight\n    );\n\n    const sheetHeight = useMemo(\n      () =>\n        safeContainerHeight -\n        snapPoints[snapPoints.length - 1] -\n        safeHandleHeight,\n      [snapPoints, safeContainerHeight, safeHandleHeight]\n    );\n\n    const initialPosition = useMemo(() => {\n      return currentIndexRef.current < 0 || animateOnMount\n        ? safeContainerHeight\n        : snapPoints[currentIndexRef.current];\n    }, [snapPoints, animateOnMount, safeContainerHeight]);\n    const currentPositionRef = useRef<number>(initialPosition);\n    //#endregion\n\n    //#region gestures\n    const {\n      state: containerTapGestureState,\n      gestureHandler: containerTapGestureHandler,\n    } = useTapGestureHandler();\n    const {\n      state: handlePanGestureState,\n      translation: { y: handlePanGestureTranslationY },\n      velocity: { y: handlePanGestureVelocityY },\n      gestureHandler: handlePanGestureHandler,\n    } = usePanGestureHandler();\n    const {\n      state: contentPanGestureState,\n      translation: { y: contentPanGestureTranslationY },\n      velocity: { y: contentPanGestureVelocityY },\n    } = usePanGestureHandler();\n    //#endregion\n\n    //#region animated variables\n    const handleOnAnimate = useStableCallback(\n      (fromIndex: number, toIndex: number) => {\n        if (_providedOnAnimate) {\n          _providedOnAnimate(fromIndex, toIndex);\n        }\n      }\n    );\n    const {\n      position,\n      manualSnapToPoint,\n      currentPosition,\n      currentGesture,\n    } = useTransition({\n      animationDuration,\n      animationEasing,\n      contentPanGestureState,\n      contentPanGestureTranslationY,\n      contentPanGestureVelocityY,\n      handlePanGestureState,\n      handlePanGestureTranslationY,\n      handlePanGestureVelocityY,\n      scrollableContentOffsetY,\n      animatedIsLayoutReady,\n      snapPoints,\n      initialPosition,\n      currentIndexRef,\n      onAnimate: handleOnAnimate,\n    });\n\n    // animated values\n    const animatedIndex = useMemo(() => {\n      const adjustedSnapPoints = snapPoints.slice().reverse();\n      const adjustedSnapPointsIndexes = snapPoints\n        .slice()\n        .map((_, index) => index)\n        .reverse();\n\n      /**\n       * this been added to resolve issues when provide\n       * one snap point.\n       */\n      if (snapPoints.length === 1) {\n        adjustedSnapPoints.push(safeContainerHeight);\n        adjustedSnapPointsIndexes.push(-1);\n      }\n\n      return cond(\n        animatedIsLayoutReady,\n        interpolate(position, {\n          inputRange: adjustedSnapPoints,\n          outputRange: adjustedSnapPointsIndexes,\n          extrapolate: Extrapolate.CLAMP,\n        }),\n        0\n      );\n    }, [position, animatedIsLayoutReady, safeContainerHeight, snapPoints]);\n\n    const animatedPosition = useMemo(\n      () =>\n        cond(\n          animatedIsLayoutReady,\n          abs(sub(safeContainerHeight, position)),\n          safeContainerHeight\n        ),\n      [safeContainerHeight, position, animatedIsLayoutReady]\n    );\n\n    /**\n     * Scrollable animated props.\n     */\n    const decelerationRate = useMemo(\n      () =>\n        cond(\n          greaterThan(position, snapPoints[snapPoints.length - 1]),\n          0.001,\n          NORMAL_DECELERATION_RATE\n        ),\n      [position, snapPoints]\n    );\n    //#endregion\n\n    //#region layout callbacks\n    const handleOnContainerMeasureHeight = useCallback((height: number) => {\n      // console.log('BottomSheet', 'handleOnContainerMeasureHeight', height);\n      didSetContainerHeight.current = true;\n      setContainerHeight(height);\n    }, []);\n\n    const handleOnHandleMeasureHeight = useCallback((height: number) => {\n      // console.log('BottomSheet', 'handleOnHandleMeasureHeight', height);\n      didSetHandleHeight.current = true;\n      setHandleHeight(height);\n    }, []);\n    //#endregion\n\n    //#region private methods\n    const refreshUIElements = useCallback(() => {\n      const currentPositionIndex = Math.max(currentIndexRef.current, 0);\n      if (containerTapGestureRef.current) {\n        // @ts-ignore\n        containerTapGestureRef.current.setNativeProps({\n          maxDeltaY: Math.abs(\n            snapPoints[snapPoints.length - 1] - snapPoints[currentPositionIndex]\n          ),\n        });\n      }\n\n      if (currentPositionIndex === snapPoints.length - 1) {\n        flashScrollableIndicators();\n      }\n    }, [snapPoints, containerTapGestureRef, flashScrollableIndicators]);\n    const handleOnChange = useStableCallback((index: number) => {\n      if (_providedOnChange) {\n        _providedOnChange(index);\n      }\n    });\n    const handleSettingScrollableRef = useCallback(\n      (scrollableRef: ScrollableRef) => {\n        setScrollableRef(scrollableRef);\n        refreshUIElements();\n      },\n      [setScrollableRef, refreshUIElements]\n    );\n    //#endregion\n\n    //#region public methods\n    const handleSnapTo = useCallback(\n      (index: number, force: boolean = false) => {\n        invariant(\n          index >= 0 && index <= snapPoints.length - 1,\n          `'index' was provided but out of the provided snap points range! expected value to be between -1, ${\n            snapPoints.length - 1\n          }`\n        );\n        if (isClosing.current && !force) {\n          return;\n        }\n        manualSnapToPoint.setValue(snapPoints[index]);\n      },\n      [snapPoints, manualSnapToPoint]\n    );\n    const handleClose = useCallback(() => {\n      const currentIndexValue = currentIndexRef.current;\n      if (\n        currentIndexValue === -1 ||\n        isClosing.current ||\n        currentPositionRef.current === safeContainerHeight\n      ) {\n        return;\n      }\n      isClosing.current = true;\n      manualSnapToPoint.setValue(safeContainerHeight);\n    }, [manualSnapToPoint, safeContainerHeight]);\n    const handleExpand = useCallback(() => {\n      if (isClosing.current) {\n        return;\n      }\n      manualSnapToPoint.setValue(snapPoints[snapPoints.length - 1]);\n    }, [snapPoints, manualSnapToPoint]);\n    const handleCollapse = useCallback(() => {\n      if (isClosing.current) {\n        return;\n      }\n      manualSnapToPoint.setValue(snapPoints[0]);\n    }, [snapPoints, manualSnapToPoint]);\n    //#endregion\n\n    //#region context variables\n    const internalContextVariables = useMemo(\n      () => ({\n        enableContentPanningGesture,\n        containerTapGestureRef,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        scrollableContentOffsetY,\n        decelerationRate,\n        setScrollableRef: handleSettingScrollableRef,\n        removeScrollableRef,\n      }),\n      [\n        enableContentPanningGesture,\n        containerTapGestureRef,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        decelerationRate,\n        scrollableContentOffsetY,\n        handleSettingScrollableRef,\n        removeScrollableRef,\n      ]\n    );\n    const externalContextVariables = useMemo(\n      () => ({\n        snapTo: handleSnapTo,\n        expand: handleExpand,\n        collapse: handleCollapse,\n        close: handleClose,\n      }),\n      [handleSnapTo, handleExpand, handleCollapse, handleClose]\n    );\n    //#endregion\n\n    //#region expose public methods\n    useImperativeHandle(ref, () => ({\n      snapTo: handleSnapTo,\n      expand: handleExpand,\n      collapse: handleCollapse,\n      close: handleClose,\n    }));\n    //#endregion\n\n    //#region styles\n    const containerStyle = useMemo(\n      () => [\n        _providedStyle,\n        styles.container,\n        {\n          opacity: animatedIsLayoutReady,\n          transform: [\n            {\n              translateY: cond(\n                animatedIsLayoutReady,\n                position,\n                safeContainerHeight\n              ),\n            },\n          ],\n        },\n      ],\n      [safeContainerHeight, _providedStyle, position, animatedIsLayoutReady]\n    );\n    const contentContainerStyle = useMemo(\n      () => ({\n        ...styles.contentContainer,\n        height: sheetHeight,\n      }),\n      [sheetHeight]\n    );\n\n    /**\n     * added safe area to prevent the sheet from floating above\n     * the bottom of the screen, when sheet being over dragged or\n     * when the sheet is resized.\n     */\n    const contentMaskContainerStyle = useMemo<ViewStyle>(\n      () => ({\n        ...styles.contentMaskContainer,\n        paddingBottom: animatedIsLayoutReady ? sheetHeight : 0,\n      }),\n      [sheetHeight, animatedIsLayoutReady]\n    );\n    //#endregion\n\n    //#region effects\n\n    /**\n     * This will animate the sheet to the initial snap point\n     * when component is mounted.\n     */\n    useLayoutEffect(() => {\n      if (\n        animateOnMount &&\n        isLayoutCalculated &&\n        didMountOnAnimate.current === false &&\n        isClosing.current === false &&\n        _providedIndex !== -1\n      ) {\n        manualSnapToPoint.setValue(snapPoints[_providedIndex]);\n        didMountOnAnimate.current = true;\n      }\n    }, [\n      _providedIndex,\n      animateOnMount,\n      isLayoutCalculated,\n      manualSnapToPoint,\n      snapPoints,\n    ]);\n\n    /*\n     * keep animated position synced with snap points.\n     */\n    useEffect(() => {\n      if (\n        isLayoutCalculated &&\n        currentIndexRef.current !== -1 &&\n        isClosing.current === false\n      ) {\n        manualSnapToPoint.setValue(snapPoints[currentIndexRef.current]);\n      }\n    }, [isLayoutCalculated, snapPoints, manualSnapToPoint]);\n\n    /**\n     * @DEV\n     * here we track the current position and\n     * - call on change ( if provided ).\n     * - flash scrollable component scroll indicators.\n     * - manipulate the root tap gesture handler maxDeltaY,\n     *   which allows the scrollable component to be activated.\n     */\n    useCode(\n      () =>\n        onChange(currentPosition, [\n          call([currentPosition], args => {\n            const currentPositionIndex = snapPoints.indexOf(args[0]);\n\n            /**\n             * reset is closing\n             */\n            isClosing.current = false;\n\n            /**\n             * if animation was interrupted, we ignore the change.\n             */\n            if (\n              currentPositionIndex === -1 &&\n              args[0] !== safeContainerHeight - topInset\n            ) {\n              return;\n            }\n\n            /**\n             * Here we announce the bottom sheet position\n             * for accessibility service.\n             */\n            AccessibilityInfo.isScreenReaderEnabled().then(isEnabled => {\n              if (\n                !isEnabled ||\n                !_providedEnableAccessibilityChangeAnnouncement\n              ) {\n                return;\n              }\n              const positionInScreen = Math.max(\n                Math.floor(\n                  ((WINDOW_HEIGHT - snapPoints[currentPositionIndex] || 1) /\n                    WINDOW_HEIGHT) *\n                    100\n                ),\n                0\n              ).toFixed(0);\n              AccessibilityInfo.announceForAccessibility(\n                typeof _providedAccessibilityPositionChangeAnnouncement ===\n                  'function'\n                  ? _providedAccessibilityPositionChangeAnnouncement(\n                      positionInScreen\n                    )\n                  : _providedAccessibilityPositionChangeAnnouncement\n              );\n            });\n\n            currentIndexRef.current = currentPositionIndex;\n            currentPositionRef.current = args[0];\n            refreshUIElements();\n            handleOnChange(currentPositionIndex);\n          }),\n        ]),\n      [snapPoints, safeContainerHeight, topInset, refreshUIElements]\n    );\n\n    /**\n     * @DEV\n     * Once the root tap gesture handler states change to failed\n     * and the sheet not fully extended, we make sure to prevent the\n     * scrollable component from scrolling.\n     */\n    useCode(\n      () =>\n        cond(\n          and(\n            eq(containerTapGestureState, State.FAILED),\n            eq(currentGesture, GESTURE.CONTENT),\n            neq(position, snapPoints[snapPoints.length - 1])\n          ),\n          call([], () => {\n            scrollToTop();\n          })\n        ),\n      [snapPoints]\n    );\n    //#endregion\n\n    //#region render\n    // console.log('BottomSheet', 'render', {\n    //   snapPoints,\n    //   shouldMeasureContainerHeight,\n    //   safeContainerHeight,\n    //   topInset,\n    //   bottomInset,\n    // });\n    return (\n      <BottomSheetProvider value={externalContextVariables}>\n        <BottomSheetBackdropContainer\n          key=\"BottomSheetBackdropContainer\"\n          animatedIndex={animatedIndex}\n          animatedPosition={animatedPosition}\n          backdropComponent={backdropComponent}\n        />\n        <BottomSheetContainer\n          key=\"BottomSheetContainer\"\n          shouldMeasureHeight={shouldMeasureContainerHeight}\n          onMeasureHeight={handleOnContainerMeasureHeight}\n          topInset={topInset}\n          bottomInset={bottomInset}\n        >\n          <BottomSheetContentWrapper\n            key=\"BottomSheetContentWrapper\"\n            ref={containerTapGestureRef}\n            {...containerTapGestureHandler}\n          >\n            <Animated.View\n              accessible={_providedAccessible ?? undefined}\n              accessibilityRole={_providedAccessibilityRole ?? undefined}\n              accessibilityLabel={_providedAccessibilityLabel ?? undefined}\n              style={containerStyle}\n              {...rest}\n            >\n              <BottomSheetInternalProvider value={internalContextVariables}>\n                <BottomSheetBackgroundContainer\n                  key=\"BottomSheetBackgroundContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  backgroundComponent={backgroundComponent}\n                />\n                <BottomSheetHandleContainer\n                  key=\"BottomSheetHandleContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  simultaneousHandlers={containerTapGestureRef}\n                  shouldMeasureHeight={shouldMeasureHandleHeight}\n                  enableHandlePanningGesture={enableHandlePanningGesture}\n                  handleComponent={handleComponent}\n                  onMeasureHeight={handleOnHandleMeasureHeight}\n                  {...handlePanGestureHandler}\n                />\n                <Animated.View\n                  pointerEvents=\"box-none\"\n                  style={contentMaskContainerStyle}\n                >\n                  <BottomSheetDraggableView\n                    key=\"BottomSheetRootDraggableView\"\n                    style={contentContainerStyle}\n                  >\n                    {children}\n                  </BottomSheetDraggableView>\n                </Animated.View>\n              </BottomSheetInternalProvider>\n            </Animated.View>\n          </BottomSheetContentWrapper>\n\n          {_providedAnimatedPosition && (\n            <Animated.Code\n              exec={set(_providedAnimatedPosition, animatedPosition)}\n            />\n          )}\n\n          {_providedAnimatedIndex && (\n            <Animated.Code exec={set(_providedAnimatedIndex, animatedIndex)} />\n          )}\n\n          {/* <BottomSheetDebugView\n            values={{\n              position,\n            }}\n          /> */}\n        </BottomSheetContainer>\n      </BottomSheetProvider>\n    );\n    //#endregion\n  }\n);\n\nconst BottomSheet = memo(BottomSheetComponent, isEqual);\n\nexport default BottomSheet;\n"]}