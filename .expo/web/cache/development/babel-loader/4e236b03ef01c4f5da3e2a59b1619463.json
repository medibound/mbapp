{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\21deg\\\\OneDrive\\\\Desktop\\\\MBAPP\\\\medibound\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faUser, faLock } from '@fortawesome/free-solid-svg-icons';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport * as Linking from 'expo-linking';\nimport firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD4suI2UA6Us7ezsvsRpjCO5vdoMheuNlg\",\n  authDomain: \"medibound-87c8a.firebaseapp.com\",\n  projectId: \"medibound-87c8a\",\n  storageBucket: \"medibound-87c8a.appspot.com\",\n  messagingSenderId: \"1047243459021\",\n  appId: \"1:1047243459021:web:f8c1e9e4df6f5d18b61c84\",\n  measurementId: \"G-4NJ8B9CSZ6\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport LandingScreen from \"./components/auth/Landing\";\nimport LoginScreen from \"./components/auth/Login\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport HomeScreen from \"./components/index/Home\";\nimport ReportsScreen from \"./components/index/Reports\";\nimport DevicesScreen from \"./components/index/Devices\";\nimport AccountScreen from \"./components/index/Account\";\nvar Stack = createStackNavigator();\nvar prefix = Linking.createURL('/');\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      firebase.auth().signOut().catch(function (err) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var linking = {\n        prefixes: [prefix],\n        config: {\n          screens: {\n            Login: 'login',\n            Register: 'join'\n          }\n        }\n      };\n      var Tab = createBottomTabNavigator();\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }\n        }, \"Loading...\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          linking: linking,\n          fallback: React.createElement(Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 58\n            }\n          }, \"Loading...\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          navigation: this.props.navigation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            headerShown: false\n          },\n          navigation: this.props.navigation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          options: {\n            headerShown: false\n          },\n          navigation: this.props.navigation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var iconName;\n\n              if (route.name === 'Home') {\n                iconName = focused ? 'cube' : 'cube-outline';\n              } else if (route.name === 'Devices') {\n                iconName = focused ? 'layers' : 'layers-outline';\n              } else if (route.name === 'Reports') {\n                iconName = focused ? 'alert-circle' : 'alert-circle-outline';\n              } else if (route.name === 'Account') {\n                iconName = focused ? 'person' : 'person-outline';\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color,\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 20\n                }\n              });\n            }\n          };\n        },\n        tabBarOptions: {\n          activeTintColor: 'rgb(68, 199, 188)',\n          inactiveTintColor: 'gray'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Devices\",\n        component: LoginScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Reports\",\n        component: ReportsScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Account\",\n        component: AccountScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["C:/Users/21deg/OneDrive/Desktop/MBAPP/medibound/App.js"],"names":["StatusBar","React","Component","NavigationContainer","LinearGradient","FontAwesomeIcon","faUser","faLock","createStackNavigator","createBottomTabNavigator","Ionicons","Linking","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","LandingScreen","LoginScreen","RegisterScreen","HomeScreen","ReportsScreen","DevicesScreen","AccountScreen","Stack","prefix","createURL","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","signOut","catch","err","console","log","error","linking","prefixes","config","screens","Login","Register","Tab","headerShown","navigation","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {Component} from 'react';\nimport { StyleSheet, Text, TextInput, View, ImageBackground, Button} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native'\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\nimport { faUser, faLock } from '@fortawesome/free-solid-svg-icons'\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport * as Linking from 'expo-linking';\n\nimport firebase from 'firebase';\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD4suI2UA6Us7ezsvsRpjCO5vdoMheuNlg\",\n  authDomain: \"medibound-87c8a.firebaseapp.com\",\n  projectId: \"medibound-87c8a\",\n  storageBucket: \"medibound-87c8a.appspot.com\",\n  messagingSenderId: \"1047243459021\",\n  appId: \"1:1047243459021:web:f8c1e9e4df6f5d18b61c84\",\n  measurementId: \"G-4NJ8B9CSZ6\"\n};\n\nif(firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig)\n}\n\nimport LandingScreen from \"./components/auth/Landing\";\nimport LoginScreen from \"./components/auth/Login\";\nimport RegisterScreen from \"./components/auth/Register\";\n\nimport HomeScreen from \"./components/index/Home\";\nimport ReportsScreen from \"./components/index/Reports\";\nimport DevicesScreen from \"./components/index/Devices\";\nimport AccountScreen from \"./components/index/Account\";\n\n\nconst Stack = createStackNavigator();\n\nconst prefix = Linking.createURL('/');\n\nexport class App extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      loaded: false,\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        this.setState({\n          loggedIn: false,\n          loaded: true,\n        })\n      } else {\n        this.setState({\n          loggedIn: true,\n          loaded: true,\n        })\n      }\n    })\n  }\n  signOut() {\n    firebase.auth().signOut()\n      .catch((err) => {\n        console.log(error);\n      })\n  }\n\n  render() {\n    const linking = {\n      prefixes: [prefix],\n      config: {\n        screens: {\n          Login: 'login',\n          Register: 'join',\n        }\n      },\n    };\n\n    const Tab = createBottomTabNavigator();\n\n    const {loggedIn, loaded} = this.state;\n    if (!loaded) {\n      return (\n        <View>\n          <Text>Loading...</Text>\n        </View>\n        \n      );\n    }\n    if (!loggedIn) {\n      return (\n        <NavigationContainer linking={linking} fallback={<Text>Loading...</Text>}>\n          <Stack.Navigator initialRouteName=\"Login\" >\n            <Stack.Screen name=\"Landing\" component={LandingScreen} options={{ headerShown: false} } navigation={this.props.navigation}/>\n            <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false} } navigation={this.props.navigation}/>\n            <Stack.Screen name=\"Register\" component={RegisterScreen} options={{ headerShown: false} } navigation={this.props.navigation}/>\n          </Stack.Navigator>\n        </NavigationContainer>\n  \n      );\n    }\n    return (\n      <NavigationContainer>\n        <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused \n                ? 'cube' \n                : 'cube-outline';\n            }\n            else if (route.name === 'Devices') {\n              iconName = focused \n                ? 'layers' \n                : 'layers-outline';\n            }\n            else if (route.name === 'Reports') {\n              iconName = focused\n                ? 'alert-circle'\n                : 'alert-circle-outline';\n            } \n            else if (route.name === 'Account') {\n              iconName = focused \n                ? 'person' \n                : 'person-outline';\n            }\n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'rgb(68, 199, 188)',\n          inactiveTintColor: 'gray',\n        }}\n      >\n          <Tab.Screen name=\"Home\" component={HomeScreen} />\n          <Tab.Screen name=\"Devices\" component={LoginScreen} />\n          <Tab.Screen name=\"Reports\" component={ReportsScreen} />\n          <Tab.Screen name=\"Account\" component={AccountScreen} />\n        </Tab.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}