{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{v4 as uuidv4}from'uuid';var INSTALLATION_ID_KEY='installationId';var installationId=null;export default function getInstallationIdAsync(){return _regeneratorRuntime.async(function getInstallationIdAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!installationId){_context.next=2;break;}return _context.abrupt(\"return\",installationId);case 2:_context.prev=2;installationId=localStorage.getItem(INSTALLATION_ID_KEY);if(!installationId){_context.next=6;break;}return _context.abrupt(\"return\",installationId);case 6:_context.next=10;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](2);case 10:installationId=uuidv4();try{localStorage.setItem(INSTALLATION_ID_KEY,installationId);}catch(error){console.debug('[expo-notifications] Could not save installation ID in persisted storage, it will get reset.',error);}return _context.abrupt(\"return\",installationId);case 13:case\"end\":return _context.stop();}}},null,null,[[2,8]],Promise);}","map":{"version":3,"sources":["../../src/environment/getInstallationIdAsync.web.ts"],"names":[],"mappings":"4DAAA,OAAS,EAAE,GAAI,CAAA,MAAf,KAA6B,MAA7B,CAEA,GAAM,CAAA,mBAAmB,CAAG,gBAA5B,CAEA,GAAI,CAAA,cAAc,CAAkB,IAApC,CAEA,cAAe,SAAe,CAAA,sBAAf,uIAET,cAFS,yDAGJ,cAHI,yBAQX,cAAc,CAAG,YAAY,CAAC,OAAb,CAAqB,mBAArB,CAAjB,CARW,IASP,cATO,yDAUF,cAVE,gGAkBb,cAAc,CAAG,MAAM,EAAvB,CAEA,GAAI,CACF,YAAY,CAAC,OAAb,CAAqB,mBAArB,CAA0C,cAA1C,EACD,CAAC,MAAO,KAAP,CAAc,CACd,OAAO,CAAC,KAAR,CACE,8FADF,CAEE,KAFF,EAID,CA3BY,gCA6BN,cA7BM","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nconst INSTALLATION_ID_KEY = 'installationId';\n\nlet installationId: string | null = null;\n\nexport default async function getInstallationIdAsync() {\n  // Already cached value\n  if (installationId) {\n    return installationId;\n  }\n\n  try {\n    // No cached value, fetch from persisted storage\n    installationId = localStorage.getItem(INSTALLATION_ID_KEY);\n    if (installationId) {\n      return installationId;\n    }\n  } catch (error) {\n    // If we weren't able to fetch one (for whatever reason)\n    // let's create a new one.\n  }\n\n  // No persisted value, set the cached value...\n  installationId = uuidv4();\n  // ...and try to persist it. Ignore the errors.\n  try {\n    localStorage.setItem(INSTALLATION_ID_KEY, installationId);\n  } catch (error) {\n    console.debug(\n      '[expo-notifications] Could not save installation ID in persisted storage, it will get reset.',\n      error\n    );\n  }\n\n  return installationId;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}