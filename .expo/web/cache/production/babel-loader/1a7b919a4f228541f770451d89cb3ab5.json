{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{Fragment}from'react';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Modal from\"react-native-web/dist/exports/Modal\";import View from\"react-native-web/dist/exports/View\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{withTheme}from\"../config\";import{ScreenWidth,ScreenHeight,isIOS}from\"../helpers\";import Triangle from\"./Triangle\";import getTooltipCoordinate,{getElementVisibleWidth}from\"./getTooltipCoordinate\";var defaultProps={withOverlay:true,overlayColor:'rgba(250, 250, 250, 0.70)',highlightColor:'transparent',withPointer:true,toggleOnPress:true,toggleAction:'onPress',height:40,width:150,containerStyle:{},backgroundColor:'#617080',onClose:function onClose(){},onOpen:function onOpen(){},skipAndroidStatusBar:false,ModalComponent:Modal,closeOnlyOnBackdropPress:false};var Tooltip=function(_React$Component){_inherits(Tooltip,_React$Component);var _super=_createSuper(Tooltip);function Tooltip(){var _this;_classCallCheck(this,Tooltip);_this=_super.apply(this,arguments);_this._isMounted=false;_this.state={isVisible:false,yOffset:0,xOffset:0,elementWidth:0,elementHeight:0};_this.toggleTooltip=function(){var onClose=_this.props.onClose;_this.getElementPosition();_this._isMounted&&_this.setState(function(prevState){if(prevState.isVisible){onClose&&onClose();}return{isVisible:!prevState.isVisible};});};_this.wrapWithPress=function(toggleOnPress,toggleAction,children){if(toggleOnPress){return React.createElement(TouchableOpacity,_extends({},_defineProperty({},toggleAction,_this.toggleTooltip),{delayLongPress:250,activeOpacity:1}),children);}return children;};_this.containerStyle=function(withOverlay,overlayColor){return{backgroundColor:withOverlay?overlayColor:'transparent',flex:1};};_this.getTooltipStyle=function(){var _ref2;var _this$state=_this.state,yOffset=_this$state.yOffset,xOffset=_this$state.xOffset,elementHeight=_this$state.elementHeight,elementWidth=_this$state.elementWidth;var _this$props=_this.props,height=_this$props.height,backgroundColor=_this$props.backgroundColor,width=_this$props.width,withPointer=_this$props.withPointer,containerStyle=_this$props.containerStyle;var _getTooltipCoordinate=getTooltipCoordinate(xOffset,yOffset,elementWidth,elementHeight,ScreenWidth,ScreenHeight,width,height,withPointer),x=_getTooltipCoordinate.x,y=_getTooltipCoordinate.y;return StyleSheet.flatten([(_ref2={position:'absolute'},_defineProperty(_ref2,I18nManager.isRTL?'right':'left',x),_defineProperty(_ref2,\"top\",y),_defineProperty(_ref2,\"width\",width),_defineProperty(_ref2,\"height\",height),_defineProperty(_ref2,\"backgroundColor\",backgroundColor),_defineProperty(_ref2,\"display\",'flex'),_defineProperty(_ref2,\"alignItems\",'center'),_defineProperty(_ref2,\"justifyContent\",'center'),_defineProperty(_ref2,\"flex\",1),_defineProperty(_ref2,\"borderRadius\",10),_defineProperty(_ref2,\"padding\",10),_ref2),containerStyle]);};_this.renderPointer=function(tooltipY){var _this$state2=_this.state,yOffset=_this$state2.yOffset,xOffset=_this$state2.xOffset,elementHeight=_this$state2.elementHeight,elementWidth=_this$state2.elementWidth;var _this$props2=_this.props,backgroundColor=_this$props2.backgroundColor,pointerColor=_this$props2.pointerColor;var pastMiddleLine=yOffset>tooltipY;return React.createElement(View,{style:_defineProperty({position:'absolute',top:pastMiddleLine?yOffset-13:yOffset+elementHeight-2},I18nManager.isRTL?'right':'left',xOffset+getElementVisibleWidth(elementWidth,xOffset,ScreenWidth)/2-7.5)},React.createElement(Triangle,{style:{borderBottomColor:pointerColor||backgroundColor},isDown:pastMiddleLine}));};_this.getTooltipHighlightedButtonStyle=function(){var _ref4;var highlightColor=_this.props.highlightColor;var _this$state3=_this.state,yOffset=_this$state3.yOffset,xOffset=_this$state3.xOffset,elementWidth=_this$state3.elementWidth,elementHeight=_this$state3.elementHeight;return _ref4={position:'absolute',top:yOffset},_defineProperty(_ref4,I18nManager.isRTL?'right':'left',xOffset),_defineProperty(_ref4,\"backgroundColor\",highlightColor),_defineProperty(_ref4,\"overflow\",'visible'),_defineProperty(_ref4,\"width\",elementWidth),_defineProperty(_ref4,\"height\",elementHeight),_ref4;};_this.renderTouchableHighlightedButton=function(){var TooltipHighlightedButtonStyle=_this.getTooltipHighlightedButtonStyle();return React.createElement(TouchableOpacity,{testID:\"tooltipTouchableHighlightedButton\",onPress:function onPress(){return _this.toggleTooltip();},style:TooltipHighlightedButtonStyle},_this.props.children);};_this.renderStaticHighlightedButton=function(){var TooltipHighlightedButtonStyle=_this.getTooltipHighlightedButtonStyle();return React.createElement(View,{style:TooltipHighlightedButtonStyle},_this.props.children);};_this.renderHighlightedButton=function(){var closeOnlyOnBackdropPress=_this.props.closeOnlyOnBackdropPress;if(closeOnlyOnBackdropPress){return _this.renderTouchableHighlightedButton();}else{return _this.renderStaticHighlightedButton();}};_this.renderContent=function(withTooltip){var _this$props3=_this.props,popover=_this$props3.popover,withPointer=_this$props3.withPointer,toggleOnPress=_this$props3.toggleOnPress,toggleAction=_this$props3.toggleAction;if(!withTooltip){return _this.wrapWithPress(toggleOnPress,toggleAction,_this.props.children);}var tooltipStyle=_this.getTooltipStyle();return React.createElement(View,null,_this.renderHighlightedButton(),withPointer&&_this.renderPointer(tooltipStyle.top),React.createElement(View,{style:tooltipStyle,testID:\"tooltipPopoverContainer\"},popover));};_this.getElementPosition=function(){var skipAndroidStatusBar=_this.props.skipAndroidStatusBar;_this.renderedElement&&_this.renderedElement.measure(function(frameOffsetX,frameOffsetY,width,height,pageOffsetX,pageOffsetY){_this._isMounted&&_this.setState({xOffset:pageOffsetX,yOffset:isIOS||skipAndroidStatusBar?pageOffsetY:pageOffsetY-StatusBar.currentHeight,elementWidth:width,elementHeight:height});});};_this.renderStaticModalContent=function(){var _this$props4=_this.props,withOverlay=_this$props4.withOverlay,overlayColor=_this$props4.overlayColor;return React.createElement(Fragment,null,React.createElement(TouchableOpacity,{style:_this.containerStyle(withOverlay,overlayColor),onPress:_this.toggleTooltip,activeOpacity:1}),React.createElement(View,null,_this.renderContent(true)));};_this.renderTogglingModalContent=function(){var _this$props5=_this.props,withOverlay=_this$props5.withOverlay,overlayColor=_this$props5.overlayColor;return React.createElement(TouchableOpacity,{style:_this.containerStyle(withOverlay,overlayColor),onPress:_this.toggleTooltip,activeOpacity:1},_this.renderContent(true));};_this.renderModalContent=function(){var closeOnlyOnBackdropPress=_this.props.closeOnlyOnBackdropPress;if(closeOnlyOnBackdropPress){return _this.renderStaticModalContent();}else{return _this.renderTogglingModalContent();}};return _this;}_createClass(Tooltip,[{key:\"componentDidMount\",value:function componentDidMount(){this._isMounted=true;requestAnimationFrame(this.getElementPosition);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._isMounted=false;}},{key:\"render\",value:function render(){var _this2=this;var isVisible=this.state.isVisible;var _this$props6=this.props,onOpen=_this$props6.onOpen,ModalComponent=_this$props6.ModalComponent;return React.createElement(View,{collapsable:false,ref:function ref(e){_this2.renderedElement=e;}},this.renderContent(false),React.createElement(ModalComponent,{animationType:\"fade\",visible:isVisible,transparent:true,onShow:onOpen},this.renderModalContent()));}}]);return Tooltip;}(React.Component);Tooltip.defaultProps=defaultProps;export{Tooltip};export default withTheme(Tooltip,'Tooltip');","map":{"version":3,"sources":["C:/Users/21deg/OneDrive/Desktop/MBAPP/medibound/node_modules/react-native-elements/dist/tooltip/Tooltip.js"],"names":["React","Fragment","withTheme","ScreenWidth","ScreenHeight","isIOS","Triangle","getTooltipCoordinate","getElementVisibleWidth","defaultProps","withOverlay","overlayColor","highlightColor","withPointer","toggleOnPress","toggleAction","height","width","containerStyle","backgroundColor","onClose","onOpen","skipAndroidStatusBar","ModalComponent","Modal","closeOnlyOnBackdropPress","Tooltip","arguments","_isMounted","state","isVisible","yOffset","xOffset","elementWidth","elementHeight","toggleTooltip","props","getElementPosition","setState","prevState","wrapWithPress","children","flex","getTooltipStyle","x","y","StyleSheet","flatten","position","I18nManager","isRTL","renderPointer","tooltipY","pointerColor","pastMiddleLine","top","borderBottomColor","getTooltipHighlightedButtonStyle","renderTouchableHighlightedButton","TooltipHighlightedButtonStyle","renderStaticHighlightedButton","renderHighlightedButton","renderContent","withTooltip","popover","tooltipStyle","renderedElement","measure","frameOffsetX","frameOffsetY","pageOffsetX","pageOffsetY","StatusBar","currentHeight","renderStaticModalContent","renderTogglingModalContent","renderModalContent","requestAnimationFrame","e","Component"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { TouchableOpacity, Modal, View, StatusBar, I18nManager, StyleSheet, } from 'react-native';\nimport { withTheme } from '../config';\nimport { ScreenWidth, ScreenHeight, isIOS } from '../helpers';\nimport Triangle from './Triangle';\nimport getTooltipCoordinate, { getElementVisibleWidth, } from './getTooltipCoordinate';\nconst defaultProps = {\n    withOverlay: true,\n    overlayColor: 'rgba(250, 250, 250, 0.70)',\n    highlightColor: 'transparent',\n    withPointer: true,\n    toggleOnPress: true,\n    toggleAction: 'onPress',\n    height: 40,\n    width: 150,\n    containerStyle: {},\n    backgroundColor: '#617080',\n    onClose: () => { },\n    onOpen: () => { },\n    skipAndroidStatusBar: false,\n    ModalComponent: Modal,\n    closeOnlyOnBackdropPress: false,\n};\nclass Tooltip extends React.Component {\n    constructor() {\n        super(...arguments);\n        this._isMounted = false;\n        this.state = {\n            isVisible: false,\n            yOffset: 0,\n            xOffset: 0,\n            elementWidth: 0,\n            elementHeight: 0,\n        };\n        this.toggleTooltip = () => {\n            const { onClose } = this.props;\n            this.getElementPosition();\n            this._isMounted &&\n                this.setState((prevState) => {\n                    if (prevState.isVisible) {\n                        onClose && onClose();\n                    }\n                    return { isVisible: !prevState.isVisible };\n                });\n        };\n        this.wrapWithPress = (toggleOnPress, toggleAction, children) => {\n            if (toggleOnPress) {\n                return (<TouchableOpacity {...{ [toggleAction]: this.toggleTooltip }} delayLongPress={250} activeOpacity={1}>\n          {children}\n        </TouchableOpacity>);\n            }\n            return children;\n        };\n        this.containerStyle = (withOverlay, overlayColor) => {\n            return {\n                backgroundColor: withOverlay ? overlayColor : 'transparent',\n                flex: 1,\n            };\n        };\n        this.getTooltipStyle = () => {\n            const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n            const { height, backgroundColor, width, withPointer, containerStyle, } = this.props;\n            const { x, y } = getTooltipCoordinate(xOffset, yOffset, elementWidth, elementHeight, ScreenWidth, ScreenHeight, width, height, withPointer);\n            return StyleSheet.flatten([\n                {\n                    position: 'absolute',\n                    [I18nManager.isRTL ? 'right' : 'left']: x,\n                    top: y,\n                    width,\n                    height,\n                    backgroundColor,\n                    // default styles\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flex: 1,\n                    borderRadius: 10,\n                    padding: 10,\n                },\n                containerStyle,\n            ]);\n        };\n        this.renderPointer = (tooltipY) => {\n            const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n            const { backgroundColor, pointerColor } = this.props;\n            const pastMiddleLine = yOffset > tooltipY;\n            return (<View style={{\n                    position: 'absolute',\n                    top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n                    [I18nManager.isRTL ? 'right' : 'left']: xOffset +\n                        getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n                        7.5,\n                }}>\n        <Triangle style={{ borderBottomColor: pointerColor || backgroundColor }} isDown={pastMiddleLine}/>\n      </View>);\n        };\n        this.getTooltipHighlightedButtonStyle = () => {\n            const { highlightColor } = this.props;\n            const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n            return {\n                position: 'absolute',\n                top: yOffset,\n                [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n                backgroundColor: highlightColor,\n                overflow: 'visible',\n                width: elementWidth,\n                height: elementHeight,\n            };\n        };\n        this.renderTouchableHighlightedButton = () => {\n            const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n            return (<TouchableOpacity testID=\"tooltipTouchableHighlightedButton\" onPress={() => this.toggleTooltip()} style={TooltipHighlightedButtonStyle}>\n        {this.props.children}\n      </TouchableOpacity>);\n        };\n        this.renderStaticHighlightedButton = () => {\n            const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n            return (<View style={TooltipHighlightedButtonStyle}>{this.props.children}</View>);\n        };\n        this.renderHighlightedButton = () => {\n            const { closeOnlyOnBackdropPress } = this.props;\n            if (closeOnlyOnBackdropPress) {\n                return this.renderTouchableHighlightedButton();\n            }\n            else {\n                return this.renderStaticHighlightedButton();\n            }\n        };\n        this.renderContent = (withTooltip) => {\n            const { popover, withPointer, toggleOnPress, toggleAction } = this.props;\n            if (!withTooltip) {\n                return this.wrapWithPress(toggleOnPress, toggleAction, this.props.children);\n            }\n            const tooltipStyle = this.getTooltipStyle();\n            return (<View>\n        {this.renderHighlightedButton()}\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View style={tooltipStyle} testID=\"tooltipPopoverContainer\">\n          {popover}\n        </View>\n      </View>);\n        };\n        this.getElementPosition = () => {\n            const { skipAndroidStatusBar } = this.props;\n            this.renderedElement &&\n                this.renderedElement.measure((frameOffsetX, frameOffsetY, width, height, pageOffsetX, pageOffsetY) => {\n                    this._isMounted &&\n                        this.setState({\n                            xOffset: pageOffsetX,\n                            yOffset: isIOS || skipAndroidStatusBar\n                                ? pageOffsetY\n                                : pageOffsetY - StatusBar.currentHeight,\n                            elementWidth: width,\n                            elementHeight: height,\n                        });\n                });\n        };\n        this.renderStaticModalContent = () => {\n            const { withOverlay, overlayColor } = this.props;\n            return (<Fragment>\n        <TouchableOpacity style={this.containerStyle(withOverlay, overlayColor)} onPress={this.toggleTooltip} activeOpacity={1}/>\n        <View>{this.renderContent(true)}</View>\n      </Fragment>);\n        };\n        this.renderTogglingModalContent = () => {\n            const { withOverlay, overlayColor } = this.props;\n            return (<TouchableOpacity style={this.containerStyle(withOverlay, overlayColor)} onPress={this.toggleTooltip} activeOpacity={1}>\n        {this.renderContent(true)}\n      </TouchableOpacity>);\n        };\n        this.renderModalContent = () => {\n            const { closeOnlyOnBackdropPress } = this.props;\n            if (closeOnlyOnBackdropPress) {\n                return this.renderStaticModalContent();\n            }\n            else {\n                return this.renderTogglingModalContent();\n            }\n        };\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        // wait to compute onLayout values.\n        requestAnimationFrame(this.getElementPosition);\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    render() {\n        const { isVisible } = this.state;\n        const { onOpen, ModalComponent } = this.props;\n        return (<View collapsable={false} ref={(e) => {\n                this.renderedElement = e;\n            }}>\n        {this.renderContent(false)}\n        <ModalComponent animationType=\"fade\" visible={isVisible} transparent onShow={onOpen}>\n          {this.renderModalContent()}\n        </ModalComponent>\n      </View>);\n    }\n}\nTooltip.defaultProps = defaultProps;\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');\n"]},"metadata":{},"sourceType":"module"}